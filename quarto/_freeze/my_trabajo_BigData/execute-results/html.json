{
  "hash": "8bd6bcd9f8a000700e83cf0bdbc50321",
  "result": {
    "markdown": "---\ntitle: \"los Audis molan\"\ndescription: \"Análisis de las características de los coches que se ponen en venta de la marca Audi en UK\"\nauthor:\n  - name: Luis Aarón Alarcón Saiz\n    affiliation: Universitat de València\n    affiliation-url: https://www.uv.es\ndate: 2024-01-21                           #--\ncategories: [trabajo BigData, AUDI]   #--\nimage: \"./imagenes/LOGO.jpg\"\ntitle-block-banner: true #- {true, false, \"green\",\"#AA0000\"}\ntitle-block-banner-color: \"#FF0000\"     \ntoc-depth: 3\nsmooth-scroll: true\nformat: \n  html:\n    #backgroundcolor: \"#F1F3F4\"\n    #embed-resources: true\n    link-external-newwindow: true\ncode-tools: true\ncode-link: true\n---\n\n\n\n## Intro \n\nEl objetivo de este trabajo será investigar ciertas variables o características de los coches de segunda mano que se ponen en venta en UK para ver ciertas tendencias relacionadas con el precio, modelo,edad del coche, kilometraje, tamaño del motor, ... para ello, haremos diferentes gráficos en contenido y forma para poder sacar conclusiones sobre todas estas variables\n\n![LOGO](./imagenes/LOGO.jpg)\n\n---\n\n## Precios por modelo\n\nEl propósito de este gráfico es poder ver con un simple vistazo el rango de precios por los cuales se mueven cada modelo de la marca en el mercado, lo primero que hay que destacar, es que se ha cogido una muestra aleatoria para hacer este gráfico ya que si no, el gráfico se vería muy saturado y de esta manera lo podemos ver mejor.\n\nComo vemos, hay mucha variabilidad en los precios de los modelos (en algunos modelos no tanto), para esto puede haber varias explicaciones:\n\nEn primer lugar y más evidente, es que conforme pasan los años, los coches van perdiendo valor y esta pérdida cada vez es mayor.\n\nTambién tenemos que pensar que cuanto más caro es el modelo de serie, más va a caer su precio en relación con coches más asequibles, esto es lo que puede estar pasando por ejemplo con el modelo A1 y el Q7.\n\nPor ejemplo hay modelos como el Q2 que se llevan fabricando desde hace poco tiempo, por lo que esto tambien podría explicar su baja variabilidad\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\n# install.packages(\"tidyverse\")\nlibrary(tidyverse)\n# Importar datos desde el archivo CSV\ndatos_audi <- read_csv(\"docs/audi.csv\")\n\n\nmodelos_comunes <- datos_audi %>%\n  group_by(model) %>%\n  summarize(Frequency = n()) %>%\n  arrange(desc(Frequency)) %>%\n  slice_head(n = 10) %>%\n  pull(model)\n\n# Muestreo aleatorio de puntos por modelo (ajusta la cantidad según sea necesario)\nsampled_data <- datos_audi %>% \n  filter(model %in% modelos_comunes) %>%\n  group_by(model) %>%\n  sample_n(size = 50) \n\n# Crea el gráfico de violín con datos muestreados y ajustes estéticos personalizados\nggplot(sampled_data,\n       aes(x = model, y = price)) +\n  geom_violin(fill = \"#69b3a2\", color = \"#404080\", alpha = 0.5, width = 0.7) +\n  geom_jitter(color = \"#404080\", alpha = 0.7, width = 0.2) +\n  labs(title = \"Distribución de Precios por Modelo (Audi)\",\n       x = \"Modelo\",\n       y = \"Precio\",\n       subtitle = \"Muestra aleatoria para mejorar la legibilidad\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5),\n        plot.subtitle = element_text(size = 12, hjust = 0.5),\n        axis.title = element_text(size = 14),\n        axis.text = element_text(size = 10),\n        legend.position = \"none\") +  # Elimina la leyenda\n  scale_fill_viridis_c()\n```\n\n::: {.cell-output-display}\n![](my_trabajo_BigData_files/figure-html/unnamed-chunk-1-1.png){fig-align='center' width=95%}\n:::\n:::\n\n---\n\n### Audi Q2\n\n![un Q2 Brutal](./imagenes/Q2.webp)\n\n\n\n---\n\n\n## Concentración de kilometraje por modelo\n\nEn este caso, estamos analizando el kilometraje que tienen los modelos en venta más importantes de Audi de media, este gráfico nos puede dar una idea de lo que nos vamos a encontrar en el mercado, ya que los kilómetros recorridos por un coche es una variable importantísima a la hora de comprar un coche de segunda mano, como podemos ver, la mayoría de la oferta se encuentra alrededor de los primeros 40.000 kilómetros, muy pocos kilómetros para este tipo de coches.\nsorprende el caso del Q2, aunque como señalabamos antes, es un modelo que se empezó a fabricar hace poco, por lo que es normal que se ubique en esa franja la mayoría de la oferta\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggplot2)\n# Filtra para incluir solo los 10 modelos más comunes\nmodelos_comunes <- datos_audi %>%\n  group_by(model) %>%\n  summarize(Frequency = n()) %>%\n  arrange(desc(Frequency)) %>%\n  slice_head(n = 10) %>%\n  pull(model)\n\nggplot(datos_audi %>% filter(model %in% modelos_comunes),\n       aes(x = mileage, fill = model)) +\n  geom_density(alpha = 0.7, color = \"white\") +\n  labs(title = \"Densidad de Kilometraje por modelo\",\n       x = \"Kilometraje\",\n       fill = \"Modelo\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") +\n  scale_fill_viridis_d() +\n  guides(fill = guide_legend(title = \"Modelo\")) +\n  xlim(0, 100000)  # Ajusta el límite del eje x\n```\n\n::: {.cell-output-display}\n![](my_trabajo_BigData_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=95%}\n:::\n:::\n\n\n\n## Número de modelos en venta por la marca\n\nEn este caso, he decidido hacer una gráfica de pastel para poder ver cuales son los modelos que más se encuentran en el mercado, este gráfico también es muy importante, ya que cuanto más coches haya de un mismo modelo en venta más posibilidades tendremos de encontrar el coche que más se adapte a nuestras necesidades y puede que, en el caso de que no haya mucha demanda, se produzca un descenso de precios por la oferta excesiva de estos\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Calcula la proporción de modelos\nproporcion_modelos <- table(datos_audi$model) / nrow(datos_audi)\n\n# Define un umbral para filtrar modelos con baja proporción\numbral_proporcion <- 0.02  # Puedes ajustar este valor según tus necesidades\n\n# Filtra los modelos por encima del umbral\nmodelos_filtrados <- names(proporcion_modelos[proporcion_modelos >= umbral_proporcion])\n\n# Filtra el conjunto de datos original\ndatos_filtrados <- datos_audi %>% \n  filter(model %in% modelos_filtrados)\n\n# Crea el gráfico circular mejorado\nggplot(data = datos_filtrados, aes(x = \"\", fill = model)) +\n  geom_bar(width = 1) +\n  coord_polar(theta = \"y\") +\n  scale_fill_brewer(palette = \"Paired\") +\n  theme_minimal() +\n  labs(title = \"Proporción de Modelos de Coches Audi\",\n       fill = \"Modelo\",\n       caption = \"Modelos con proporción superior al umbral\") +\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),\n        plot.caption = element_text(hjust = 0.5, size = 10))\n```\n\n::: {.cell-output-display}\n![](my_trabajo_BigData_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=95%}\n:::\n:::\n\n\n---\n\n## Gráfico para precio, año, kilometraje\n\nDe todos los gráficos, sin duda este es el mas revelador y el que más me gusta debido a que se puede analizar precio, año, kilometraje y modelo en un mismo gráfico, destacar de nuevo que lo hemos hecho a partir de una muestra ya que si no el gráfico estaría muy saturado\n\ncomo podemos ver, hay una correlación directa entre el precio y el año, cuantos mas años tiene el coche mas valor pierde, despues también podemos ver como los coches con menos años tienen menos kilómetros (se determina con el tamaño de las burbujas) y ademas cuantos menos años tienen mayor es su valor.\n\ntambien vemos como los modelos tales como el Q7 son los más caros y el A3 los mas baratos\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggplot2)\n\n# Asegúrate de que las variables de interés sean numéricas\ndatos_filtrados$price <- as.numeric(datos_filtrados$price)\ndatos_filtrados$mileage <- as.numeric(datos_filtrados$mileage)\ndatos_filtrados$year <- as.numeric(datos_filtrados$year)\n\n# Convierte la variable 'year' a formato de fecha\ndatos_filtrados$year <- as.Date(paste0(datos_filtrados$year, \"-01-01\"))\n# Muestra un subconjunto aleatorio de datos (ajusta el tamaño según sea necesario)\nset.seed(123)  # Para reproducibilidad\ndatos_muestreados <- datos_filtrados[sample(nrow(datos_filtrados), 250), ]\n\n# Crea el gráfico de burbujas mejorado\nggplot(datos_muestreados, aes(x = year, y = price, size = mileage, color = factor(model))) +\n  geom_point(alpha = 0.7, stroke = 0.2) +\n  scale_size_continuous(range = c(1, 15)) +\n  scale_color_viridis_d() +\n  labs(title = \"Gráfico de Burbujas para Precio, Kilometraje y Año\",\n       x = \"Año\",\n       y = \"Precio\",\n       size = \"Kilometraje\",\n       color = \"Año\") +\n  theme_minimal() +\n  theme(legend.position = \"right\",\n        legend.background = element_rect(fill = \"white\", color = \"black\"),  # Ajusta el fondo de la leyenda\n        legend.key = element_rect(fill = \"white\", color = \"black\")) +  # Ajusta el fondo de las teclas de la leyenda\n  geom_text(aes(label = model), size = 2, check_overlap = TRUE, nudge_x = 0.2, nudge_y = 0.2) +\n  guides(color = FALSE)  # Oculta la leyenda de color\n\n```\n\n::: {.cell-output-display}\n![](my_trabajo_BigData_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=95%}\n:::\n:::\n\n\n\n---\n\n## Correlación entre variables\nEste gráfico seria un resumen de la correlacion entre ls distintas variables que estabamos analizando, como podemos ver, muchas de nuestras explicaciones se cumplen , como por ejemplo la relacion positiva entre precio y año de fabricacion, o la correlación negativa entre el año y el kilometraje, tambien esa relación negativa entre el precio y el kilometraje...\n\nuna de las variables que no hemos observado es el tamaño del motor, que como podemos ver tiene una relación positiva con el precio, los coches con motor mas grandes tambien son más caros\n\notra variable interesante es el consumo que en este caso viene en millas por galón, podemos ver que tiene correlación negativa con el precio del coche, hay que pensar que un coche que gasta mucho combustible es un problema para mantanerlo y esto se tiene en cuenta a la hora de comprar un coche\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggplot2)\nlibrary(corrplot)\n\n# Calcula la matriz de correlación\ncor_matrix <- cor(datos_audi[, c(\"year\", \"price\", \"mileage\", \"tax\", \"mpg\", \"engineSize\")])\n\n# Cambia los nombres de las filas y columnas\nrownames(cor_matrix) <- c(\"Año\", \"Precio\", \"Kilometraje\", \"Impuesto\", \"MPG\", \"Tamaño del Motor\")\ncolnames(cor_matrix) <- c(\"Año\", \"Precio\", \"Kilometraje\", \"Impuesto\", \"MPG\", \"Tamaño del Motor\")\n\n# Configura un color más agradable para el mapa de calor\ncolor_palette <- colorRampPalette(c(\"#BB4444\", \"#EE9988\", \"#FFFFFF\", \"#77AADD\", \"#4477AA\"))\n\n# Crea el mapa de calor\ncorrplot(cor_matrix, \n         method = \"color\", \n         col = color_palette(200),\n         addCoef.col = \"black\",\n         tl.col = \"black\",\n         tl.srt = 45,\n         diag = FALSE)\n```\n\n::: {.cell-output-display}\n![](my_trabajo_BigData_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=95%}\n:::\n:::\n\n\n---\n\n## Bonus track: grafico problematico\n\nEste grafico lo añado como un extra ya que sin duda ha sido el más problematico, no me dejaba renderizar el archivo QMD, por lo que la solución que decidi tomar es guardar el gráfico en un HTML y añadirlo al QMD.\n\nEste gráfico es el mas divertido que he hecho ya que ese efecto 3D junto a la posibilidad de poder moverse es muy atractivo.\nPor otro lado también destacar la posibilidad de ver las características de cada punto solo con pasar el raton por encima.\n\n<iframe src=\"scatter3d_audi_mejorado.html\" width=\"800\" height=\"600\"></iframe>\n\n\n----------------------\n\n<br>\n\n### Información sobre la sesión\n\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n<details closed>\n<summary> <span title='Click to Expand'> current session info </span> </summary>\n\n```r\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16 ucrt)\n os       Windows 10 x64 (build 19045)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  Spanish_Spain.utf8\n ctype    Spanish_Spain.utf8\n tz       Europe/Madrid\n date     2024-01-21\n pandoc   3.1.1 @ C:/Users/aaron/Downloads/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package      * version date (UTC) lib source\n bit            4.0.5   2022-11-15 [1] CRAN (R 4.3.1)\n bit64          4.0.5   2020-08-30 [1] CRAN (R 4.3.1)\n cli            3.6.2   2023-12-11 [1] CRAN (R 4.3.2)\n clipr          0.8.0   2022-02-22 [1] CRAN (R 4.3.1)\n colorspace     2.1-0   2023-01-23 [1] CRAN (R 4.3.1)\n corrplot     * 0.92    2021-11-18 [1] CRAN (R 4.3.2)\n crayon         1.5.2   2022-09-29 [1] CRAN (R 4.3.1)\n desc           1.4.2   2022-09-08 [1] CRAN (R 4.3.2)\n details        0.3.0   2022-03-27 [1] CRAN (R 4.3.2)\n digest         0.6.33  2023-07-07 [1] CRAN (R 4.3.1)\n dplyr        * 1.1.4   2023-11-17 [1] CRAN (R 4.3.2)\n evaluate       0.23    2023-11-01 [1] CRAN (R 4.3.2)\n fansi          1.0.6   2023-12-08 [1] CRAN (R 4.3.2)\n farver         2.1.1   2022-07-06 [1] CRAN (R 4.3.1)\n fastmap        1.1.1   2023-02-24 [1] CRAN (R 4.3.1)\n forcats      * 1.0.0   2023-01-29 [1] CRAN (R 4.3.1)\n generics       0.1.3   2022-07-05 [1] CRAN (R 4.3.1)\n ggplot2      * 3.4.4   2023-10-12 [1] CRAN (R 4.3.2)\n glue           1.6.2   2022-02-24 [1] CRAN (R 4.3.1)\n gtable         0.3.4   2023-08-21 [1] CRAN (R 4.3.1)\n hms            1.1.3   2023-03-21 [1] CRAN (R 4.3.1)\n htmltools      0.5.6   2023-08-10 [1] CRAN (R 4.3.1)\n httr           1.4.7   2023-08-15 [1] CRAN (R 4.3.2)\n jsonlite       1.8.8   2023-12-04 [1] CRAN (R 4.3.2)\n knitr          1.45    2023-10-30 [1] CRAN (R 4.3.2)\n labeling       0.4.3   2023-08-29 [1] CRAN (R 4.3.1)\n lifecycle      1.0.4   2023-11-07 [1] CRAN (R 4.3.2)\n lubridate    * 1.9.2   2023-02-10 [1] CRAN (R 4.3.1)\n magrittr       2.0.3   2022-03-30 [1] CRAN (R 4.3.1)\n munsell        0.5.0   2018-06-12 [1] CRAN (R 4.3.1)\n pillar         1.9.0   2023-03-22 [1] CRAN (R 4.3.1)\n pkgconfig      2.0.3   2019-09-22 [1] CRAN (R 4.3.1)\n png            0.1-8   2022-11-29 [1] CRAN (R 4.3.0)\n purrr        * 1.0.2   2023-08-10 [1] CRAN (R 4.3.1)\n R6             2.5.1   2021-08-19 [1] CRAN (R 4.3.1)\n RColorBrewer   1.1-3   2022-04-03 [1] CRAN (R 4.3.1)\n readr        * 2.1.4   2023-02-10 [1] CRAN (R 4.3.1)\n rlang          1.1.2   2023-11-04 [1] CRAN (R 4.3.2)\n rmarkdown      2.24    2023-08-14 [1] CRAN (R 4.3.1)\n rprojroot      2.0.3   2022-04-02 [1] CRAN (R 4.3.1)\n rstudioapi     0.15.0  2023-07-07 [1] CRAN (R 4.3.1)\n scales         1.3.0   2023-11-28 [1] CRAN (R 4.3.2)\n sessioninfo    1.2.2   2021-12-06 [1] CRAN (R 4.3.2)\n stringi        1.8.3   2023-12-11 [1] CRAN (R 4.3.2)\n stringr      * 1.5.1   2023-11-14 [1] CRAN (R 4.3.2)\n tibble       * 3.2.1   2023-03-20 [1] CRAN (R 4.3.1)\n tidyr        * 1.3.0   2023-01-24 [1] CRAN (R 4.3.1)\n tidyselect     1.2.0   2022-10-10 [1] CRAN (R 4.3.1)\n tidyverse    * 2.0.0   2023-02-22 [1] CRAN (R 4.3.1)\n timechange     0.2.0   2023-01-11 [1] CRAN (R 4.3.1)\n tzdb           0.4.0   2023-05-12 [1] CRAN (R 4.3.1)\n utf8           1.2.4   2023-10-22 [1] CRAN (R 4.3.2)\n vctrs          0.6.5   2023-12-01 [1] CRAN (R 4.3.2)\n viridisLite    0.4.2   2023-05-02 [1] CRAN (R 4.3.1)\n vroom          1.6.3   2023-04-28 [1] CRAN (R 4.3.1)\n withr          2.5.2   2023-10-30 [1] CRAN (R 4.3.2)\n xfun           0.41    2023-11-01 [1] CRAN (R 4.3.2)\n xml2           1.3.5   2023-07-06 [1] CRAN (R 4.3.1)\n yaml           2.3.8   2023-12-11 [1] CRAN (R 4.3.2)\n\n [1] C:/Users/aaron/AppData/Local/R/win-library/4.3\n [2] C:/Program Files/R/R-4.3.1/library\n\n──────────────────────────────────────────────────────────────────────────────\n\n```\n\n</details>\n<br>\n:::\n:::\n",
    "supporting": [
      "my_trabajo_BigData_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}